


ARM Macro Assembler    Page 1 


    1 00000000         ;=======================================================
                       ==============
    2 00000000         ; File Name : 2440slib.s
    3 00000000         ; Function  : TQ2440  (Assembly)
    4 00000000         ; Revision  : 1.0
    5 00000000         ;=======================================================
                       ==============
    6 00000000                 PRESERVE8
    7 00000000         ;Interrupt, FIQ/IRQ disable
    8 00000000 000000C0 
                       NOINT   EQU              0xc0        ; 1100 0000
    9 00000000         
   10 00000000         ;Check if tasm.exe(armasm -16 ...@ADS 1.0) is used.
   11 00000000                 GBLL             THUMBCODE
   12 00000000                 [                {CONFIG} = 16
   16 00000000 FALSE    
                       THUMBCODE
                               SETL             {FALSE}
   17 00000000                 ]
   18 00000000         
   19 00000000                 MACRO
   20 00000000                 MOV_PC_LR
   21 00000000                 [                THUMBCODE
   22 00000000                 bx               lr
   23 00000000                 |
   24 00000000                 mov              pc,lr
   25 00000000                 ]
   26 00000000                 MEND
   27 00000000         
   28 00000000                 AREA             |C$$code|, CODE, READONLY
   29 00000000                 EXPORT           EnterCritical
   30 00000000         EnterCritical
   31 00000000 E10F1000        mrs              r1, cpsr
   32 00000004 E5801000        str              r1, [r0]
   33 00000008 E38110C0        orr              r1, r1, #NOINT
   34 0000000C E12FF001        msr              cpsr_cxsf, r1
   35 00000010                 MOV_PC_LR
   21 00000010                 [                THUMBCODE
   24 00000010 E1A0F00E        mov              pc,lr
   25 00000014                 ]
   36 00000014         ;restore cpsr, r0 = address to restore cpsr 
   37 00000014                 EXPORT           ExitCritical
   38 00000014         ExitCritical
   39 00000014 E5901000        ldr              r1, [r0]
   40 00000018 E12FF001        msr              cpsr_cxsf, r1
   41 0000001C                 MOV_PC_LR
   21 0000001C                 [                THUMBCODE
   24 0000001C E1A0F00E        mov              pc,lr
   25 00000020                 ]
   42 00000020         ;==============
   43 00000020         ; CPSR I,F bit
   44 00000020         ;==============
   45 00000020         ;int SET_IF(void);
   46 00000020         ;The return value is current CPSR.
   47 00000020                 EXPORT           SET_IF
   48 00000020         SET_IF
   49 00000020         ;This function works only if the processor is in previli
                       ged mode.
   50 00000020 E10F0000        mrs              r0,cpsr



ARM Macro Assembler    Page 2 


   51 00000024 E1A01000        mov              r1,r0
   52 00000028 E38110C0        orr              r1,r1,#NOINT
   53 0000002C E12FF001        msr              cpsr_cxsf,r1
   54 00000030                 MOV_PC_LR
   21 00000030                 [                THUMBCODE
   24 00000030 E1A0F00E        mov              pc,lr
   25 00000034                 ]
   55 00000034         
   56 00000034         ;void WR_IF(int cpsrValue);
   57 00000034                 EXPORT           WR_IF
   58 00000034         WR_IF
   59 00000034         ;This function works only if the processor is in previli
                       ged mode.
   60 00000034 E12FF000        msr              cpsr_cxsf,r0
   61 00000038                 MOV_PC_LR
   21 00000038                 [                THUMBCODE
   24 00000038 E1A0F00E        mov              pc,lr
   25 0000003C                 ]
   62 0000003C         
   63 0000003C         
   64 0000003C         ;void CLR_IF(void);
   65 0000003C                 EXPORT           CLR_IF
   66 0000003C         CLR_IF
   67 0000003C         ;This function works only if the processor is in previli
                       ged mode.
   68 0000003C E10F0000        mrs              r0,cpsr
   69 00000040 E3C000C0        bic              r0,r0,#NOINT
   70 00000044 E12FF000        msr              cpsr_cxsf,r0
   71 00000048                 MOV_PC_LR
   21 00000048                 [                THUMBCODE
   24 00000048 E1A0F00E        mov              pc,lr
   25 0000004C                 ]
   72 0000004C         
   73 0000004C                 EXPORT           outportw
   74 0000004C E1C100B0 
                       outportw
                               strh             r0, [r1]
   75 00000050                 MOV_PC_LR
   21 00000050                 [                THUMBCODE
   24 00000050 E1A0F00E        mov              pc,lr
   25 00000054                 ]
   76 00000054         
   77 00000054                 EXPORT           inportw
   78 00000054 E1D000B0 
                       inportw ldrh             r0, [r0]
   79 00000058                 MOV_PC_LR
   21 00000058                 [                THUMBCODE
   24 00000058 E1A0F00E        mov              pc,lr
   25 0000005C                 ]
   80 0000005C         
   81 0000005C         
   82 0000005C         ;====================================
   83 0000005C         ; MMU Cache/TLB/etc on/off functions
   84 0000005C         ;====================================
   85 0000005C 00001000 
                       R1_I    EQU              (1<<12)
   86 0000005C 00000004 
                       R1_C    EQU              (1<<2)
   87 0000005C 00000002 



ARM Macro Assembler    Page 3 


                       R1_A    EQU              (1<<1)
   88 0000005C 00000001 
                       R1_M    EQU              (1)
   89 0000005C 80000000 
                       R1_iA   EQU              (1<<31)
   90 0000005C 40000000 
                       R1_nF   EQU              (1<<30)
   91 0000005C         
   92 0000005C         ;void MMU_EnableICache(void)
   93 0000005C                 EXPORT           MMU_EnableICache
   94 0000005C         MMU_EnableICache
   95 0000005C EE110F10        mrc              p15,0,r0,c1,c0,0
   96 00000060 E3800A01        orr              r0,r0,#R1_I
   97 00000064 EE010F10        mcr              p15,0,r0,c1,c0,0
   98 00000068                 MOV_PC_LR
   21 00000068                 [                THUMBCODE
   24 00000068 E1A0F00E        mov              pc,lr
   25 0000006C                 ]
   99 0000006C         
  100 0000006C         ;void MMU_DisableICache(void)
  101 0000006C                 EXPORT           MMU_DisableICache
  102 0000006C         MMU_DisableICache
  103 0000006C EE110F10        mrc              p15,0,r0,c1,c0,0
  104 00000070 E3C00A01        bic              r0,r0,#R1_I
  105 00000074 EE010F10        mcr              p15,0,r0,c1,c0,0
  106 00000078                 MOV_PC_LR
   21 00000078                 [                THUMBCODE
   24 00000078 E1A0F00E        mov              pc,lr
   25 0000007C                 ]
  107 0000007C         
  108 0000007C         ;void MMU_EnableDCache(void)
  109 0000007C                 EXPORT           MMU_EnableDCache
  110 0000007C         MMU_EnableDCache
  111 0000007C EE110F10        mrc              p15,0,r0,c1,c0,0
  112 00000080 E3800004        orr              r0,r0,#R1_C
  113 00000084 EE010F10        mcr              p15,0,r0,c1,c0,0
  114 00000088                 MOV_PC_LR
   21 00000088                 [                THUMBCODE
   24 00000088 E1A0F00E        mov              pc,lr
   25 0000008C                 ]
  115 0000008C         
  116 0000008C         ;void MMU_DisableDCache(void)
  117 0000008C                 EXPORT           MMU_DisableDCache
  118 0000008C         MMU_DisableDCache
  119 0000008C EE110F10        mrc              p15,0,r0,c1,c0,0
  120 00000090 E3C00004        bic              r0,r0,#R1_C
  121 00000094 EE010F10        mcr              p15,0,r0,c1,c0,0
  122 00000098                 MOV_PC_LR
   21 00000098                 [                THUMBCODE
   24 00000098 E1A0F00E        mov              pc,lr
   25 0000009C                 ]
  123 0000009C         
  124 0000009C         ;void MMU_EnableAlignFault(void)
  125 0000009C                 EXPORT           MMU_EnableAlignFault
  126 0000009C         MMU_EnableAlignFault
  127 0000009C EE110F10        mrc              p15,0,r0,c1,c0,0
  128 000000A0 E3800002        orr              r0,r0,#R1_A
  129 000000A4 EE010F10        mcr              p15,0,r0,c1,c0,0
  130 000000A8                 MOV_PC_LR



ARM Macro Assembler    Page 4 


   21 000000A8                 [                THUMBCODE
   24 000000A8 E1A0F00E        mov              pc,lr
   25 000000AC                 ]
  131 000000AC         
  132 000000AC         ;void MMU_DisableAlignFault(void)
  133 000000AC                 EXPORT           MMU_DisableAlignFault
  134 000000AC         MMU_DisableAlignFault
  135 000000AC EE110F10        mrc              p15,0,r0,c1,c0,0
  136 000000B0 E3C00002        bic              r0,r0,#R1_A
  137 000000B4 EE010F10        mcr              p15,0,r0,c1,c0,0
  138 000000B8                 MOV_PC_LR
   21 000000B8                 [                THUMBCODE
   24 000000B8 E1A0F00E        mov              pc,lr
   25 000000BC                 ]
  139 000000BC         
  140 000000BC         ;void MMU_EnableMMU(void)
  141 000000BC                 EXPORT           MMU_EnableMMU
  142 000000BC         MMU_EnableMMU
  143 000000BC EE110F10        mrc              p15,0,r0,c1,c0,0
  144 000000C0 E3800001        orr              r0,r0,#R1_M
  145 000000C4 EE010F10        mcr              p15,0,r0,c1,c0,0
  146 000000C8                 MOV_PC_LR
   21 000000C8                 [                THUMBCODE
   24 000000C8 E1A0F00E        mov              pc,lr
   25 000000CC                 ]
  147 000000CC         
  148 000000CC         ;void MMU_DisableMMU(void)
  149 000000CC                 EXPORT           MMU_DisableMMU
  150 000000CC         MMU_DisableMMU
  151 000000CC EE110F10        mrc              p15,0,r0,c1,c0,0
  152 000000D0 E3C00001        bic              r0,r0,#R1_M
  153 000000D4 EE010F10        mcr              p15,0,r0,c1,c0,0
  154 000000D8                 MOV_PC_LR
   21 000000D8                 [                THUMBCODE
   24 000000D8 E1A0F00E        mov              pc,lr
   25 000000DC                 ]
  155 000000DC         
  156 000000DC         ;void MMU_SetFastBusMode(void)
  157 000000DC         ; FCLK:HCLK= 1:1
  158 000000DC                 EXPORT           MMU_SetFastBusMode
  159 000000DC         MMU_SetFastBusMode
  160 000000DC EE110F10        mrc              p15,0,r0,c1,c0,0
  161 000000E0 E3C00103        bic              r0,r0,#R1_iA:OR:R1_nF
  162 000000E4 EE010F10        mcr              p15,0,r0,c1,c0,0
  163 000000E8                 MOV_PC_LR
   21 000000E8                 [                THUMBCODE
   24 000000E8 E1A0F00E        mov              pc,lr
   25 000000EC                 ]
  164 000000EC         
  165 000000EC         ;void MMU_SetAsyncBusMode(void)
  166 000000EC         ; FCLK:HCLK= 1:2
  167 000000EC                 EXPORT           MMU_SetAsyncBusMode
  168 000000EC         MMU_SetAsyncBusMode
  169 000000EC EE110F10        mrc              p15,0,r0,c1,c0,0
  170 000000F0 E3800103        orr              r0,r0,#R1_nF:OR:R1_iA
  171 000000F4 EE010F10        mcr              p15,0,r0,c1,c0,0
  172 000000F8                 MOV_PC_LR
   21 000000F8                 [                THUMBCODE
   24 000000F8 E1A0F00E        mov              pc,lr



ARM Macro Assembler    Page 5 


   25 000000FC                 ]
  173 000000FC         
  174 000000FC         ;=========================
  175 000000FC         ; Set TTBase
  176 000000FC         ;=========================
  177 000000FC         ;void MMU_SetTTBase(int base)
  178 000000FC                 EXPORT           MMU_SetTTBase
  179 000000FC         MMU_SetTTBase
  180 000000FC         ;ro=TTBase
  181 000000FC EE020F10        mcr              p15,0,r0,c2,c0,0
  182 00000100                 MOV_PC_LR
   21 00000100                 [                THUMBCODE
   24 00000100 E1A0F00E        mov              pc,lr
   25 00000104                 ]
  183 00000104         
  184 00000104         ;=========================
  185 00000104         ; Set Domain
  186 00000104         ;=========================
  187 00000104         ;void MMU_SetDomain(int domain)
  188 00000104                 EXPORT           MMU_SetDomain
  189 00000104         MMU_SetDomain
  190 00000104         ;ro=domain
  191 00000104 EE030F10        mcr              p15,0,r0,c3,c0,0
  192 00000108                 MOV_PC_LR
   21 00000108                 [                THUMBCODE
   24 00000108 E1A0F00E        mov              pc,lr
   25 0000010C                 ]
  193 0000010C         
  194 0000010C         ;=========================
  195 0000010C         ; ICache/DCache functions
  196 0000010C         ;=========================
  197 0000010C         ;void MMU_InvalidateIDCache(void)
  198 0000010C                 EXPORT           MMU_InvalidateIDCache
  199 0000010C         MMU_InvalidateIDCache
  200 0000010C EE070F17        mcr              p15,0,r0,c7,c7,0
  201 00000110                 MOV_PC_LR
   21 00000110                 [                THUMBCODE
   24 00000110 E1A0F00E        mov              pc,lr
   25 00000114                 ]
  202 00000114         
  203 00000114         ;void MMU_InvalidateICache(void)
  204 00000114                 EXPORT           MMU_InvalidateICache
  205 00000114         MMU_InvalidateICache
  206 00000114 EE070F15        mcr              p15,0,r0,c7,c5,0
  207 00000118                 MOV_PC_LR
   21 00000118                 [                THUMBCODE
   24 00000118 E1A0F00E        mov              pc,lr
   25 0000011C                 ]
  208 0000011C         
  209 0000011C         ;void MMU_InvalidateICacheMVA(U32 mva)
  210 0000011C                 EXPORT           MMU_InvalidateICacheMVA
  211 0000011C         MMU_InvalidateICacheMVA
  212 0000011C         ;r0=mva
  213 0000011C EE070F35        mcr              p15,0,r0,c7,c5,1
  214 00000120                 MOV_PC_LR
   21 00000120                 [                THUMBCODE
   24 00000120 E1A0F00E        mov              pc,lr
   25 00000124                 ]
  215 00000124         



ARM Macro Assembler    Page 6 


  216 00000124         ;void MMU_PrefetchICacheMVA(U32 mva)
  217 00000124                 EXPORT           MMU_PrefetchICacheMVA
  218 00000124         MMU_PrefetchICacheMVA
  219 00000124         ;r0=mva
  220 00000124 EE070F3D        mcr              p15,0,r0,c7,c13,1
  221 00000128                 MOV_PC_LR
   21 00000128                 [                THUMBCODE
   24 00000128 E1A0F00E        mov              pc,lr
   25 0000012C                 ]
  222 0000012C         
  223 0000012C         ;void MMU_InvalidateDCache(void)
  224 0000012C                 EXPORT           MMU_InvalidateDCache
  225 0000012C         MMU_InvalidateDCache
  226 0000012C EE070F16        mcr              p15,0,r0,c7,c6,0
  227 00000130                 MOV_PC_LR
   21 00000130                 [                THUMBCODE
   24 00000130 E1A0F00E        mov              pc,lr
   25 00000134                 ]
  228 00000134         
  229 00000134         ;void MMU_InvalidateDCacheMVA(U32 mva)
  230 00000134                 EXPORT           MMU_InvalidateDCacheMVA
  231 00000134         MMU_InvalidateDCacheMVA
  232 00000134         ;r0=mva
  233 00000134 EE070F36        mcr              p15,0,r0,c7,c6,1
  234 00000138                 MOV_PC_LR
   21 00000138                 [                THUMBCODE
   24 00000138 E1A0F00E        mov              pc,lr
   25 0000013C                 ]
  235 0000013C         
  236 0000013C         ;void MMU_CleanDCacheMVA(U32 mva)
  237 0000013C                 EXPORT           MMU_CleanDCacheMVA
  238 0000013C         MMU_CleanDCacheMVA
  239 0000013C         ;r0=mva
  240 0000013C EE070F3A        mcr              p15,0,r0,c7,c10,1
  241 00000140                 MOV_PC_LR
   21 00000140                 [                THUMBCODE
   24 00000140 E1A0F00E        mov              pc,lr
   25 00000144                 ]
  242 00000144         
  243 00000144         ;void MMU_CleanInvalidateDCacheMVA(U32 mva)
  244 00000144                 EXPORT           MMU_CleanInvalidateDCacheMVA
  245 00000144         MMU_CleanInvalidateDCacheMVA
  246 00000144         ;r0=mva
  247 00000144 EE070F3E        mcr              p15,0,r0,c7,c14,1
  248 00000148                 MOV_PC_LR
   21 00000148                 [                THUMBCODE
   24 00000148 E1A0F00E        mov              pc,lr
   25 0000014C                 ]
  249 0000014C         
  250 0000014C         ;void MMU_CleanDCacheIndex(U32 index)
  251 0000014C                 EXPORT           MMU_CleanDCacheIndex
  252 0000014C         MMU_CleanDCacheIndex
  253 0000014C         ;r0=index
  254 0000014C EE070F5A        mcr              p15,0,r0,c7,c10,2
  255 00000150                 MOV_PC_LR
   21 00000150                 [                THUMBCODE
   24 00000150 E1A0F00E        mov              pc,lr
   25 00000154                 ]
  256 00000154         



ARM Macro Assembler    Page 7 


  257 00000154         ;void MMU_CleanInvalidateDCacheIndex(U32 index)
  258 00000154                 EXPORT           MMU_CleanInvalidateDCacheIndex
  259 00000154         MMU_CleanInvalidateDCacheIndex
  260 00000154         ;r0=index
  261 00000154 EE070F5E        mcr              p15,0,r0,c7,c14,2
  262 00000158                 MOV_PC_LR
   21 00000158                 [                THUMBCODE
   24 00000158 E1A0F00E        mov              pc,lr
   25 0000015C                 ]
  263 0000015C         
  264 0000015C         ;void MMU_WaitForInterrupt(void)
  265 0000015C                 EXPORT           MMU_WaitForInterrupt
  266 0000015C         MMU_WaitForInterrupt
  267 0000015C EE070F90        mcr              p15,0,r0,c7,c0,4
  268 00000160                 MOV_PC_LR
   21 00000160                 [                THUMBCODE
   24 00000160 E1A0F00E        mov              pc,lr
   25 00000164                 ]
  269 00000164         
  270 00000164         ;===============
  271 00000164         ; TLB functions
  272 00000164         ;===============
  273 00000164         ;voic MMU_InvalidateTLB(void)
  274 00000164                 EXPORT           MMU_InvalidateTLB
  275 00000164         MMU_InvalidateTLB
  276 00000164 EE080F17        mcr              p15,0,r0,c8,c7,0
  277 00000168                 MOV_PC_LR
   21 00000168                 [                THUMBCODE
   24 00000168 E1A0F00E        mov              pc,lr
   25 0000016C                 ]
  278 0000016C         
  279 0000016C         ;void MMU_InvalidateITLB(void)
  280 0000016C                 EXPORT           MMU_InvalidateITLB
  281 0000016C         MMU_InvalidateITLB
  282 0000016C EE080F15        mcr              p15,0,r0,c8,c5,0
  283 00000170                 MOV_PC_LR
   21 00000170                 [                THUMBCODE
   24 00000170 E1A0F00E        mov              pc,lr
   25 00000174                 ]
  284 00000174         
  285 00000174         ;void MMU_InvalidateITLBMVA(U32 mva)
  286 00000174                 EXPORT           MMU_InvalidateITLBMVA
  287 00000174         MMU_InvalidateITLBMVA
  288 00000174         ;ro=mva
  289 00000174 EE080F35        mcr              p15,0,r0,c8,c5,1
  290 00000178                 MOV_PC_LR
   21 00000178                 [                THUMBCODE
   24 00000178 E1A0F00E        mov              pc,lr
   25 0000017C                 ]
  291 0000017C         
  292 0000017C         ;void MMU_InvalidateDTLB(void)
  293 0000017C                 EXPORT           MMU_InvalidateDTLB
  294 0000017C         MMU_InvalidateDTLB
  295 0000017C EE080F16        mcr              p15,0,r0,c8,c6,0
  296 00000180                 MOV_PC_LR
   21 00000180                 [                THUMBCODE
   24 00000180 E1A0F00E        mov              pc,lr
   25 00000184                 ]
  297 00000184         



ARM Macro Assembler    Page 8 


  298 00000184         ;void MMU_InvalidateDTLBMVA(U32 mva)
  299 00000184                 EXPORT           MMU_InvalidateDTLBMVA
  300 00000184         MMU_InvalidateDTLBMVA
  301 00000184         ;r0=mva
  302 00000184 EE080F36        mcr              p15,0,r0,c8,c6,1
  303 00000188                 MOV_PC_LR
   21 00000188                 [                THUMBCODE
   24 00000188 E1A0F00E        mov              pc,lr
   25 0000018C                 ]
  304 0000018C         
  305 0000018C         ;=================
  306 0000018C         ; Cache lock down
  307 0000018C         ;=================
  308 0000018C         ;void MMU_SetDCacheLockdownBase(U32 base)
  309 0000018C                 EXPORT           MMU_SetDCacheLockdownBase
  310 0000018C         MMU_SetDCacheLockdownBase
  311 0000018C         ;r0= victim & lockdown base
  312 0000018C EE090F10        mcr              p15,0,r0,c9,c0,0
  313 00000190                 MOV_PC_LR
   21 00000190                 [                THUMBCODE
   24 00000190 E1A0F00E        mov              pc,lr
   25 00000194                 ]
  314 00000194         
  315 00000194         ;void MMU_SetICacheLockdownBase(U32 base)
  316 00000194                 EXPORT           MMU_SetICacheLockdownBase
  317 00000194         MMU_SetICacheLockdownBase
  318 00000194         ;r0= victim & lockdown base
  319 00000194 EE090F30        mcr              p15,0,r0,c9,c0,1
  320 00000198                 MOV_PC_LR
   21 00000198                 [                THUMBCODE
   24 00000198 E1A0F00E        mov              pc,lr
   25 0000019C                 ]
  321 0000019C         
  322 0000019C         ;=================
  323 0000019C         ; TLB lock down
  324 0000019C         ;=================
  325 0000019C         ;void MMU_SetDTLBLockdown(U32 baseVictim)
  326 0000019C                 EXPORT           MMU_SetDTLBLockdown
  327 0000019C         MMU_SetDTLBLockdown
  328 0000019C         ;r0= baseVictim
  329 0000019C EE0A0F10        mcr              p15,0,r0,c10,c0,0
  330 000001A0                 MOV_PC_LR
   21 000001A0                 [                THUMBCODE
   24 000001A0 E1A0F00E        mov              pc,lr
   25 000001A4                 ]
  331 000001A4         
  332 000001A4         ;void MMU_SetITLBLockdown(U32 baseVictim)
  333 000001A4                 EXPORT           MMU_SetITLBLockdown
  334 000001A4         MMU_SetITLBLockdown
  335 000001A4         ;r0= baseVictim
  336 000001A4 EE0A0F30        mcr              p15,0,r0,c10,c0,1
  337 000001A8                 MOV_PC_LR
   21 000001A8                 [                THUMBCODE
   24 000001A8 E1A0F00E        mov              pc,lr
   25 000001AC                 ]
  338 000001AC         
  339 000001AC         ;============
  340 000001AC         ; Process ID
  341 000001AC         ;============



ARM Macro Assembler    Page 9 


  342 000001AC         ;void MMU_SetProcessId(U32 pid)
  343 000001AC                 EXPORT           MMU_SetProcessId
  344 000001AC         MMU_SetProcessId
  345 000001AC         ;r0= pid
  346 000001AC EE0D0F10        mcr              p15,0,r0,c13,c0,0
  347 000001B0                 MOV_PC_LR
   21 000001B0                 [                THUMBCODE
   24 000001B0 E1A0F00E        mov              pc,lr
   25 000001B4                 ]
  348 000001B4         
  349 000001B4                 END
Command Line: --debug --xref --cpu=ARM920T --apcs=interwork --depend=.\output\2
440slib.d -o.\output\2440slib.o -I.\S3C2440\inc -Id:\Keil\ARM\INC -Id:\Keil\ARM
\INC\Samsung --list=.\2440slib.lst S3C2440\src\2440slib.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

C$$code 00000000

Symbol: C$$code
   Definitions
      At line 28 in file S3C2440\src\2440slib.s
   Uses
      None
Comment: C$$code unused
CLR_IF 0000003C

Symbol: CLR_IF
   Definitions
      At line 66 in file S3C2440\src\2440slib.s
   Uses
      At line 65 in file S3C2440\src\2440slib.s
Comment: CLR_IF used once
EnterCritical 00000000

Symbol: EnterCritical
   Definitions
      At line 30 in file S3C2440\src\2440slib.s
   Uses
      At line 29 in file S3C2440\src\2440slib.s
Comment: EnterCritical used once
ExitCritical 00000014

Symbol: ExitCritical
   Definitions
      At line 38 in file S3C2440\src\2440slib.s
   Uses
      At line 37 in file S3C2440\src\2440slib.s
Comment: ExitCritical used once
MMU_CleanDCacheIndex 0000014C

Symbol: MMU_CleanDCacheIndex
   Definitions
      At line 252 in file S3C2440\src\2440slib.s
   Uses
      At line 251 in file S3C2440\src\2440slib.s
Comment: MMU_CleanDCacheIndex used once
MMU_CleanDCacheMVA 0000013C

Symbol: MMU_CleanDCacheMVA
   Definitions
      At line 238 in file S3C2440\src\2440slib.s
   Uses
      At line 237 in file S3C2440\src\2440slib.s
Comment: MMU_CleanDCacheMVA used once
MMU_CleanInvalidateDCacheIndex 00000154

Symbol: MMU_CleanInvalidateDCacheIndex
   Definitions
      At line 259 in file S3C2440\src\2440slib.s
   Uses
      At line 258 in file S3C2440\src\2440slib.s
Comment: MMU_CleanInvalidateDCacheIndex used once
MMU_CleanInvalidateDCacheMVA 00000144

Symbol: MMU_CleanInvalidateDCacheMVA



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 245 in file S3C2440\src\2440slib.s
   Uses
      At line 244 in file S3C2440\src\2440slib.s
Comment: MMU_CleanInvalidateDCacheMVA used once
MMU_DisableAlignFault 000000AC

Symbol: MMU_DisableAlignFault
   Definitions
      At line 134 in file S3C2440\src\2440slib.s
   Uses
      At line 133 in file S3C2440\src\2440slib.s
Comment: MMU_DisableAlignFault used once
MMU_DisableDCache 0000008C

Symbol: MMU_DisableDCache
   Definitions
      At line 118 in file S3C2440\src\2440slib.s
   Uses
      At line 117 in file S3C2440\src\2440slib.s
Comment: MMU_DisableDCache used once
MMU_DisableICache 0000006C

Symbol: MMU_DisableICache
   Definitions
      At line 102 in file S3C2440\src\2440slib.s
   Uses
      At line 101 in file S3C2440\src\2440slib.s
Comment: MMU_DisableICache used once
MMU_DisableMMU 000000CC

Symbol: MMU_DisableMMU
   Definitions
      At line 150 in file S3C2440\src\2440slib.s
   Uses
      At line 149 in file S3C2440\src\2440slib.s
Comment: MMU_DisableMMU used once
MMU_EnableAlignFault 0000009C

Symbol: MMU_EnableAlignFault
   Definitions
      At line 126 in file S3C2440\src\2440slib.s
   Uses
      At line 125 in file S3C2440\src\2440slib.s
Comment: MMU_EnableAlignFault used once
MMU_EnableDCache 0000007C

Symbol: MMU_EnableDCache
   Definitions
      At line 110 in file S3C2440\src\2440slib.s
   Uses
      At line 109 in file S3C2440\src\2440slib.s
Comment: MMU_EnableDCache used once
MMU_EnableICache 0000005C

Symbol: MMU_EnableICache
   Definitions
      At line 94 in file S3C2440\src\2440slib.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 93 in file S3C2440\src\2440slib.s
Comment: MMU_EnableICache used once
MMU_EnableMMU 000000BC

Symbol: MMU_EnableMMU
   Definitions
      At line 142 in file S3C2440\src\2440slib.s
   Uses
      At line 141 in file S3C2440\src\2440slib.s
Comment: MMU_EnableMMU used once
MMU_InvalidateDCache 0000012C

Symbol: MMU_InvalidateDCache
   Definitions
      At line 225 in file S3C2440\src\2440slib.s
   Uses
      At line 224 in file S3C2440\src\2440slib.s
Comment: MMU_InvalidateDCache used once
MMU_InvalidateDCacheMVA 00000134

Symbol: MMU_InvalidateDCacheMVA
   Definitions
      At line 231 in file S3C2440\src\2440slib.s
   Uses
      At line 230 in file S3C2440\src\2440slib.s
Comment: MMU_InvalidateDCacheMVA used once
MMU_InvalidateDTLB 0000017C

Symbol: MMU_InvalidateDTLB
   Definitions
      At line 294 in file S3C2440\src\2440slib.s
   Uses
      At line 293 in file S3C2440\src\2440slib.s
Comment: MMU_InvalidateDTLB used once
MMU_InvalidateDTLBMVA 00000184

Symbol: MMU_InvalidateDTLBMVA
   Definitions
      At line 300 in file S3C2440\src\2440slib.s
   Uses
      At line 299 in file S3C2440\src\2440slib.s
Comment: MMU_InvalidateDTLBMVA used once
MMU_InvalidateICache 00000114

Symbol: MMU_InvalidateICache
   Definitions
      At line 205 in file S3C2440\src\2440slib.s
   Uses
      At line 204 in file S3C2440\src\2440slib.s
Comment: MMU_InvalidateICache used once
MMU_InvalidateICacheMVA 0000011C

Symbol: MMU_InvalidateICacheMVA
   Definitions
      At line 211 in file S3C2440\src\2440slib.s
   Uses
      At line 210 in file S3C2440\src\2440slib.s
Comment: MMU_InvalidateICacheMVA used once
MMU_InvalidateIDCache 0000010C



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: MMU_InvalidateIDCache
   Definitions
      At line 199 in file S3C2440\src\2440slib.s
   Uses
      At line 198 in file S3C2440\src\2440slib.s
Comment: MMU_InvalidateIDCache used once
MMU_InvalidateITLB 0000016C

Symbol: MMU_InvalidateITLB
   Definitions
      At line 281 in file S3C2440\src\2440slib.s
   Uses
      At line 280 in file S3C2440\src\2440slib.s
Comment: MMU_InvalidateITLB used once
MMU_InvalidateITLBMVA 00000174

Symbol: MMU_InvalidateITLBMVA
   Definitions
      At line 287 in file S3C2440\src\2440slib.s
   Uses
      At line 286 in file S3C2440\src\2440slib.s
Comment: MMU_InvalidateITLBMVA used once
MMU_InvalidateTLB 00000164

Symbol: MMU_InvalidateTLB
   Definitions
      At line 275 in file S3C2440\src\2440slib.s
   Uses
      At line 274 in file S3C2440\src\2440slib.s
Comment: MMU_InvalidateTLB used once
MMU_PrefetchICacheMVA 00000124

Symbol: MMU_PrefetchICacheMVA
   Definitions
      At line 218 in file S3C2440\src\2440slib.s
   Uses
      At line 217 in file S3C2440\src\2440slib.s
Comment: MMU_PrefetchICacheMVA used once
MMU_SetAsyncBusMode 000000EC

Symbol: MMU_SetAsyncBusMode
   Definitions
      At line 168 in file S3C2440\src\2440slib.s
   Uses
      At line 167 in file S3C2440\src\2440slib.s
Comment: MMU_SetAsyncBusMode used once
MMU_SetDCacheLockdownBase 0000018C

Symbol: MMU_SetDCacheLockdownBase
   Definitions
      At line 310 in file S3C2440\src\2440slib.s
   Uses
      At line 309 in file S3C2440\src\2440slib.s
Comment: MMU_SetDCacheLockdownBase used once
MMU_SetDTLBLockdown 0000019C

Symbol: MMU_SetDTLBLockdown
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 327 in file S3C2440\src\2440slib.s
   Uses
      At line 326 in file S3C2440\src\2440slib.s
Comment: MMU_SetDTLBLockdown used once
MMU_SetDomain 00000104

Symbol: MMU_SetDomain
   Definitions
      At line 189 in file S3C2440\src\2440slib.s
   Uses
      At line 188 in file S3C2440\src\2440slib.s
Comment: MMU_SetDomain used once
MMU_SetFastBusMode 000000DC

Symbol: MMU_SetFastBusMode
   Definitions
      At line 159 in file S3C2440\src\2440slib.s
   Uses
      At line 158 in file S3C2440\src\2440slib.s
Comment: MMU_SetFastBusMode used once
MMU_SetICacheLockdownBase 00000194

Symbol: MMU_SetICacheLockdownBase
   Definitions
      At line 317 in file S3C2440\src\2440slib.s
   Uses
      At line 316 in file S3C2440\src\2440slib.s
Comment: MMU_SetICacheLockdownBase used once
MMU_SetITLBLockdown 000001A4

Symbol: MMU_SetITLBLockdown
   Definitions
      At line 334 in file S3C2440\src\2440slib.s
   Uses
      At line 333 in file S3C2440\src\2440slib.s
Comment: MMU_SetITLBLockdown used once
MMU_SetProcessId 000001AC

Symbol: MMU_SetProcessId
   Definitions
      At line 344 in file S3C2440\src\2440slib.s
   Uses
      At line 343 in file S3C2440\src\2440slib.s
Comment: MMU_SetProcessId used once
MMU_SetTTBase 000000FC

Symbol: MMU_SetTTBase
   Definitions
      At line 179 in file S3C2440\src\2440slib.s
   Uses
      At line 178 in file S3C2440\src\2440slib.s
Comment: MMU_SetTTBase used once
MMU_WaitForInterrupt 0000015C

Symbol: MMU_WaitForInterrupt
   Definitions
      At line 266 in file S3C2440\src\2440slib.s
   Uses
      At line 265 in file S3C2440\src\2440slib.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

Comment: MMU_WaitForInterrupt used once
SET_IF 00000020

Symbol: SET_IF
   Definitions
      At line 48 in file S3C2440\src\2440slib.s
   Uses
      At line 47 in file S3C2440\src\2440slib.s
Comment: SET_IF used once
WR_IF 00000034

Symbol: WR_IF
   Definitions
      At line 58 in file S3C2440\src\2440slib.s
   Uses
      At line 57 in file S3C2440\src\2440slib.s
Comment: WR_IF used once
inportw 00000054

Symbol: inportw
   Definitions
      At line 78 in file S3C2440\src\2440slib.s
   Uses
      At line 77 in file S3C2440\src\2440slib.s
Comment: inportw used once
outportw 0000004C

Symbol: outportw
   Definitions
      At line 74 in file S3C2440\src\2440slib.s
   Uses
      At line 73 in file S3C2440\src\2440slib.s
Comment: outportw used once
41 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NOINT 000000C0

Symbol: NOINT
   Definitions
      At line 8 in file S3C2440\src\2440slib.s
   Uses
      At line 33 in file S3C2440\src\2440slib.s
      At line 52 in file S3C2440\src\2440slib.s
      At line 69 in file S3C2440\src\2440slib.s

R1_A 00000002

Symbol: R1_A
   Definitions
      At line 87 in file S3C2440\src\2440slib.s
   Uses
      At line 128 in file S3C2440\src\2440slib.s
      At line 136 in file S3C2440\src\2440slib.s

R1_C 00000004

Symbol: R1_C
   Definitions
      At line 86 in file S3C2440\src\2440slib.s
   Uses
      At line 112 in file S3C2440\src\2440slib.s
      At line 120 in file S3C2440\src\2440slib.s

R1_I 00001000

Symbol: R1_I
   Definitions
      At line 85 in file S3C2440\src\2440slib.s
   Uses
      At line 96 in file S3C2440\src\2440slib.s
      At line 104 in file S3C2440\src\2440slib.s

R1_M 00000001

Symbol: R1_M
   Definitions
      At line 88 in file S3C2440\src\2440slib.s
   Uses
      At line 144 in file S3C2440\src\2440slib.s
      At line 152 in file S3C2440\src\2440slib.s

R1_iA 80000000

Symbol: R1_iA
   Definitions
      At line 89 in file S3C2440\src\2440slib.s
   Uses
      At line 161 in file S3C2440\src\2440slib.s
      At line 170 in file S3C2440\src\2440slib.s

R1_nF 40000000

Symbol: R1_nF
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 90 in file S3C2440\src\2440slib.s
   Uses
      At line 161 in file S3C2440\src\2440slib.s
      At line 170 in file S3C2440\src\2440slib.s

7 symbols
373 symbols in table
